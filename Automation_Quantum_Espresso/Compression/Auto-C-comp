#!/bin/sh
#
# Sample PBS job script
#
# Copy this script, customize it and submit to PBS with the `qsub''
# commands:
#
# cp pbs-template.sh myjob-pbs.sh
# {emacs|vi} myjob-pbs.sh
# qsub myjob-pbs.sh
#
# If you want your batch job to inherit all your environment variables,
# use the ``V'' switch:
#
## qsub -V myjob-pbs.sh
#
# or uncomment the following line by removing the initial ``###''
#PBS -V

### Set the job name
#PBS -N p3comp_32-232C

### Run in the queue named "default"
#PBS -q largemem

### Remove only the three initial "#" characters before #PBS
### in the following lines to enable:
###
### To send email when the job is completed:
### #PBS -m ae
### #PBS -M your@email.address

### Optionally set destination for your program's output
### Specify localhost and an NFS filesystem to prevent file copy errors.
### #PBS -e localhost:$HOME/hpl-test-intel/openmpi.gcc/HPL_JOB.err
### #PBS -o localhost:$HOME/hpl-test-intel/openmpi.gcc/HPL_JOB.log

### Specify the number of cpus for your job.  This example will allocate 16 cores
### using 4 nodes with 4 processes per node.
###
### You MUST specify some number of nodes or TORQUE will fail to load balance.
###
#PBS -l nodes=fat002:ppn=36

### Tell PBS how much memory you expect to use. Use units of 'b','kb', 'mb' or 'gb'
### #PBS -l mem=256m

### Tell PBS the anticipated run-time for your job, where walltime=HH:MM:SS
#PBS -l walltime=10000:00:00

### Switch to the working directory; by default TORQUE launches processes
### from your home directory.
echo Working directory is $PBS_O_WORKDIR
cd $PBS_O_WORKDIR

### Display the job context
echo Running on host `hostname`
echo Time is `date`
echo Directory is `pwd`
echo The following processors are allocated to this job:
echo `cat $PBS_NODEFILE`

### have wc read from stdin instead of from a file
ncpus=`wc -l < $PBS_NODEFILE`
### How to run an OpenMPI program
###
####/shared/openmpi/gcc/bin/mpirun -machinefile $PBS_NODEFILE -np $ncpus xhpl

source /shared/intel_june_30/mkl/bin/mklvars.sh  intel64
source /shared/intel_june_30/impi/2019.7.217/intel64/bin/mpivars.sh intel64
source /shared/intel_june_30/bin/compilervars.sh  intel64
export I_MPI_CC=icc
export I_MPI_CC=icc
export I_MPI_CXX=icpc
export I_MPI_F77=ifort
export I_MPI_F90=ifort

cd Compc

%The Data provided in Folder and METHOD variables are just examples for demonstration.

Folder="49 50 51 52 53 54 55 56 57 58 59 60 61 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234"
METHOD="12.64426567 12.58104434 12.51813912 10.55661101 10.50382796 10.45130882 10.39905227 10.34705701 10.29532173 10.24384512 10.19262589 10.14166276 10.09095445 10.04049968 9.99029718 9.94034569 9.89064396 9.84119074 9.79198479 9.74302487 9.69430974 9.64583819 9.59760900 9.54962096 9.50187285 9.45436349 9.40709167 9.36005621 9.31325593 9.26668965 9.22035620 9.17425442 9.12838315 9.08274123 9.03732753 8.99214089 8.94718019 8.90244428 8.85793206 8.81364240 8.76957419 8.72572632 8.68209769 8.63868720 8.59549376 8.55251630 8.50975371 8.46720495 8.42486892 8.38274458 8.34083085 8.29912670 8.25763107 8.21634291 8.17526120 8.13438489 8.09371296 8.05324440 8.01297818 7.97291329 7.93304872 7.89338348 7.85391656 7.81464698 7.77557374 7.73669587 7.69801239 7.65952233 7.62122472 7.58311860 7.54520300 7.50747699 7.46993960 7.43258991 7.39542696 7.35844982 7.32165757 7.28504928 7.24862404 7.21238092 7.17631901 7.14043742 7.10473523 7.06921155 7.03386550 6.99869617 6.96370269 6.92888418 6.89423975 6.85976856 6.82546971 6.79134236 6.75738565 6.72359872 6.68998073 6.65653083 6.62324817 6.59013193 6.55718127 6.52439537 6.49177339 6.45931452 6.42701795 6.39488286 6.36290845 6.33109390 6.29943843 6.26794124 6.23660154 6.20541853 6.17439144 6.14351948 6.11280188 6.08223787 6.05182668 6.02156755 5.99145971 5.96150241 5.93169490 5.90203643 5.87252624 5.84316361 5.81394779 5.78487806 5.75595366 5.72717390 5.69853803 5.67004534 5.64169511 5.61348663 5.58541920 5.55749211 5.52970464 5.50205612 5.47454584 5.44717311 5.41993725 5.39283756 5.36587337 5.33904401 5.31234879 5.28578704 5.25935811 5.23306132 5.20689601 5.18086153 5.15495722 5.12918244 5.10353652 5.07801884 5.05262875 5.02736560 5.00222877 4.97721763 4.95233154 4.92756988 4.90293204 4.87841738 4.85402529 4.82975516 4.80560639 4.78157835 4.75767046 4.73388211 4.71021270 4.68666164 4.66322833"
#######################################################################
for f in $Folder
do


next_value=$(echo "$f+1" | bc)

mkdir scratch-$next_value
cd scratch-$next_value
TMP_DIR=`pwd`
cd ../

mkdir $next_value

cd $f

path=/home/karimnadersamra/Compc/$next_value


cp pw_compress$f%c.out  $path


cd ..

cd $next_value

method_values=( $METHOD )
index=$(( f - 31 | bc ))
c_value=${method_values[$index]}

#########             Needed INPUT	 ############################
PP_DIR=/home/karimnadersamra/Pseudos
bands=256
PWSCF=/shared/QE7.0_intel/qe-7.0/bin/pw.x
ncpu=36
material=pw_compress$f%c
k=0.529177249
#######################################################################


cat >pw_compress$next_value%c.in<<EOF
&CONTROL
   calculation =   'vc-relax'   ,
   verbosity = 'high' ,
   restart_mode = 'from_scratch' ,
   outdir='$TMP_DIR' ,
   pseudo_dir = '$PP_DIR' ,
   tstress = .true.  ,
   tprnfor= .true.  ,
   prefix='$material',
   etot_conv_thr = 7.7D-6  ,
   forc_conv_thr = 4.0D-5 ,
   nstep = 10000 ,
 /
 &SYSTEM
    ibrav = 8 ,
    A = 10.38532482
    B = 11.01888534
    C = $c_value
    cosAB = 0 
    cosAC = 0
    cosBC = 0
    nat  =  160 , 
    ntyp  =  4 , 
    nbnd  = $bands ,
  ecutwfc  =  110 ,
  ecutrho  =  440 ,
  nspin = 1 ,
  occupations = 'fixed',
  vdw_corr = 'Grimme-D3' ,
  dftd3_version = 4 , ! BJ damping
  dftd3_threebody = .true. , !include 3-body Grimme correction. true is the default
 /
 &ELECTRONS
                    diagonalization='david',
                    mixing_mode = 'plain' ,
                    mixing_beta = 0.7,
                    startingwfc = 'random',
                    conv_thr  =  1.0d-10  ,
		    electron_maxstep = 10000 , 
  /
&ions
    ion_dynamics='bfgs'
/
&CELL
   cell_dynamics = 'bfgs' ,
   cell_dofree   = 'xy' ,
 /
ATOMIC_SPECIES
  C    12.011    C.upf  
  O    15.9994   O.upf
  N    14.0067   N.upf
  H    1.00784   H.upf
ATOMIC_POSITIONS crystal
C             0.9365243983        0.3490902270        0.1575740764
C             0.0634756097        0.6509097729        0.8424259526
C             0.5634756017        0.6509097729        0.6575740474
C             0.4365243983        0.3490902270        0.3424259236
C             0.0634756097        0.8490902270        0.3424259236
C             0.9365243983        0.1509097730        0.6575740474
C             0.4365243983        0.1509097730        0.8424259526
C             0.5634756017        0.8490902270        0.1575740764
C             0.8721247300        0.2681780441        0.2244512364
C             0.1278752410        0.7318219409        0.7755487636
C             0.6278752700        0.7318219409        0.7244512363
C             0.3721247590        0.2681780441        0.2755487637
C             0.1278752410        0.7681780591        0.2755487637
C             0.8721247300        0.2318219409        0.7244512363
C             0.3721247590        0.2318219409        0.7755487636
C             0.6278752700        0.7681780591        0.2244512364
C             0.8045838004        0.3126765044        0.3105459517
C             0.1954161996        0.6873234956        0.6894540483
C             0.6954161996        0.6873234956        0.8105459517
C             0.3045838004        0.3126765044        0.1894540483
C             0.1954161996        0.8126765044        0.1894540483
C             0.8045838004        0.1873234956        0.8105459517
C             0.3045838004        0.1873234956        0.6894540483
C             0.6954161996        0.8126765044        0.3105459517
C             0.8002897127        0.4369420085        0.3315604987
C             0.1997102723        0.5630579915        0.6684395313
C             0.6997102875        0.5630579915        0.8315604687
C             0.3002897125        0.4369420085        0.1684395013
C             0.1997102723        0.9369420085        0.1684395013
C             0.8002897127        0.0630579915        0.8315604687
C             0.3002897125        0.0630579915        0.6684395313
C             0.6997102875        0.9369420085        0.3315604987
C             0.8623734124        0.5178239096        0.2639222114
C             0.1376266096        0.4821760604        0.7360777886
C             0.6376265876        0.4821760604        0.7639222114
C             0.3623733834        0.5178239096        0.2360777886
C             0.1376266096        1.0178239397        0.2360777886
C             0.8623734124       -0.0178239096        0.7639222114
C             0.3623733834       -0.0178239096        0.7360777886
C             0.6376265876        1.0178239397        0.2639222114
C             0.9303216988        0.4740352363        0.1775344740
C             0.0696783281        0.5259647927        0.8224655260
C             0.5696783012        0.5259647927        0.6775344740
C             0.4303216688        0.4740352363        0.3224655260
C             0.0696783281        0.9740352073        0.3224655260
C             0.9303216988        0.0259647637        0.6775344740
C             0.4303216688        0.0259647637        0.8224655260
C             0.5696783012        0.9740352073        0.1775344740
C             0.9991885741        0.2029173395        0.0190211082
C             0.0008114499        0.7970826305        0.9809788718
C             0.5008114259        0.7970826305        0.5190211282
C             0.4991885451        0.2029173395        0.4809789018
C             0.0008114499        0.7029173695        0.4809789018
C             0.9991885741        0.2970826605        0.5190211282
C             0.4991885451        0.2970826605        0.9809788718
C             0.5008114259        0.7029173695        0.0190211082
C             0.0943830120        0.1828357716        0.9314513434
C             0.9056170100        0.8171642584        0.0685486486
C             0.4056169800        0.8171642584        0.4314513434
C             0.5943829900        0.1828357716        0.5685486566
C             0.9056170100        0.6828357416        0.5685486566
C             0.0943830120        0.3171642284        0.4314513434
C             0.5943829900        0.3171642284        0.0685486486
C             0.4056169800        0.6828357416        0.9314513434
N             0.0126549461        0.3093220050        0.0723928726
N             0.9873450259        0.6906779650        0.9276071345
N             0.4873450559        0.6906779650        0.5723928655
N             0.5126549741        0.3093220050        0.4276071344
N             0.9873450259        0.8093220350        0.4276071344
N             0.0126549461        0.1906779950        0.5723928655
N             0.5126549741        0.1906779950        0.9276071345
N             0.4873450559        0.8093220350        0.0723928726
O             0.9128152073        0.1291847492        1.0416901484
O             0.0871847627        0.8708152358       -0.0416901553
O             0.5871847927        0.8708152358        0.5416901483
O             0.4128152373        0.1291847492        0.4583098517
O             0.0871847627        0.6291847642        0.4583098517
O             0.9128152073        0.3708152358        0.5416901483
O             0.4128152373        0.3708152358       -0.0416901553
O             0.5871847927        0.6291847642        1.0416901484
O             0.7407061554        0.4787156055        0.4221278417
O             0.2592938586        0.5212844246        0.5778721283
O             0.7592938446        0.5212844246        0.9221278717
O             0.2407061554        0.4787156055        0.0778721583
O             0.2592938586        0.9787155755        0.0778721583
O             0.7407061554        0.0212843945        0.9221278717
O             0.2407061554        0.0212843945        0.5778721283
O             0.7592938446        0.9787155755        0.4221278417
H             0.8761196804        0.1714167430        0.2097112874
H             0.1238803046        0.8285832860        0.7902887346
H             0.6238803196        0.8285832860        0.7097112654
H             0.3761196804        0.1714167430        0.2902887046
H             0.1238803046        0.6714167140        0.2902887046
H             0.8761196804        0.3285832570        0.7097112654
H             0.3761196804        0.3285832570        0.7902887346
H             0.6238803196        0.6714167140        0.2097112874
H             0.7590165492        0.2494670451        0.3646996238
H             0.2409834208        0.7505329549        0.6353003762
H             0.7409834508        0.7505329549        0.8646996238
H             0.2590165792        0.2494670451        0.1353003762
H             0.2409834208        0.7494670451        0.1353003762
H             0.7590165492        0.2505329549        0.8646996238
H             0.2590165792        0.2505329549        0.6353003762
H             0.7409834508        0.7494670451        0.3646996238
H             0.8607227367        0.6144387883        0.2809718051
H             0.1392772854        0.3855612116        0.7190281949
H             0.6392772634        0.3855612116        0.7809718050
H             0.3607227066        0.6144387883        0.2190281949
H             0.1392772854        1.1144387883        0.2190281949
H             0.8607227367       -0.1144387884        0.7809718050
H             0.3607227066       -0.1144387884        0.7190281949
H             0.6392772634        1.1144387883        0.2809718051
H            -0.0177324629        0.5364324296        0.1264102382
H             1.0177324409        0.4635675704        0.8735897918
H             0.5177324699        0.4635675704        0.6264102082
H             0.4822675591        0.5364324296        0.3735897618
H             1.0177324409        1.0364324296        0.3735897618
H            -0.0177324629       -0.0364324297        0.6264102082
H             0.4822675591       -0.0364324297        0.8735897918
H             0.5177324699        1.0364324296        0.1264102382
H             0.0867080846        0.3662658447        0.0523792152
H             0.9132919154        0.6337341553        0.9476207848
H             0.4132919154        0.6337341553        0.5523792152
H             0.5867080846        0.3662658447        0.4476207848
H             0.9132919154        0.8662658448        0.4476207848
H             0.0867080846        0.1337341552        0.5523792152
H             0.5867080846        0.1337341552        0.9476207848
H             0.4132919154        0.8662658448        0.0523792152
H             0.0954727306        0.0868148287        0.9104226527
H             0.9045272844        0.9131851863        0.0895773692
H             0.4045272844        0.9131851863        0.4104226228
H             0.5954727156        0.0868148287        0.5895773473
H             0.9045272844        0.5868148136        0.5895773473
H             0.0954727306        0.4131851863        0.4104226228
H             0.5954727156        0.4131851863        0.0895773692
H             0.4045272844        0.5868148136        0.9104226527
H             0.1914467894        0.2129001936        0.9526706538
H             0.8085531956        0.7870998064        0.0473293662
H             0.3085531956        0.7870998064        0.4526706248
H             0.6914468044        0.2129001936        0.5473293463
H             0.8085531956        0.7129001936        0.5473293463
H             0.1914467894        0.2870998064        0.4526706248
H             0.6914468044        0.2870998064        0.0473293662
H             0.3085531956        0.7129001936        0.9526706538
H             0.0643708116        0.2342894562        0.8617781971
H             0.9356291804        0.7657105438        0.1382218169
H             0.4356291804        0.7657105438        0.3617781971
H             0.5643708196        0.2342894561        0.6382218029
H             0.9356291804        0.7342894562        0.6382218029
H             0.0643708116        0.2657105438        0.3617781971
H             0.5643708196        0.2657105438        0.1382218169
H             0.4356291804        0.7342894562        0.8617781971
H             0.7977782900        0.4476691635        0.4791634242
H             0.2022217400        0.5523308065        0.5208365758
H             0.7022217100        0.5523308065        0.9791634242
H             0.2977782600        0.4476691635        0.0208365758
H             0.2022217400        0.9476691935        0.0208365758
H             0.7977782900        0.0523308365        0.9791634242
H             0.2977782600        0.0523308365        0.5208365758
H             0.7022217100        0.9476691935        0.4791634242
K_POINTS automatic 
  2 3 1   1 1 1
EOF


grep -A 3 "CELL_PARA" pw_compress$f%c.out | tail -3 > cell_$f.txt                                              #Extracting Cell_Parameters from Output file#         
grep -A 160 "ATOMIC_POSITIONS" pw_compress$f%c.out  | tail -160 > atomic_$f.txt                                   #Extracting Atomic_Positions from Output file#

sed -i '/ATOMIC_POSITIONS crystal/,/K_POINTS automatic /{/ATOMIC_POSITIONS crystal/b;/K_POINTS automatic /b;d}' pw_compress$next_value%c.in     

sed -i "/ATOMIC_POSITIONS crystal/r atomic_$f.txt" pw_compress$next_value%c.in



######################################################################
##                Preprocessing and Values Extraction               ##
######################################################################
alat=$(grep  -A 0 CELL_PARAMETERS pw_compress$f%c.out |tail -n 1|sed -n 's/.*alat=\([^)]*\).*/\1/p')         
echo "$alat" >> alat_text_$f.txt 

thevalue=`awk '{print $1}' < alat_text_$f.txt`                  
echo $thevalue > thevalue_$f.txt

grep -A 1 "CELL_PARA"  pw_compress$f%c.out | tail -1 > a_au_$f.txt            
a_au=`awk '{print $1}' < a_au_$f.txt`                          

grep -A 2 "CELL_PARA" pw_compress$f%c.out | tail -1 > b_au_$f.txt            
b_au=`awk '{print $2}' < b_au_$f.txt`                          

#ang=`awk '{printf "%.10f\n", $1 * -1}' c_au_$f.txt`
#######################################################################
##                          Calculations                             ##
#######################################################################

A1=$(echo  $a_au \* $k | bc -l)                             
A=$(echo  $A1 \* $thevalue | bc -l)                         



#x1=$(echo  $ang \* $ang | bc -l) 
#printf "%.10f" $x1 > ang_print.txt
#x=`awk '{print $1}' < ang_print.txt`

#v=$(echo $C_au \* $C_au | bc -l) 



#sum=$(echo  "scale=10; $v + $x" | bc -l)

#sqrt_sum=$(echo "scale=10; sqrt($sum)" | bc -l)

B1=$(echo  $b_au \* $k | bc -l)
B=$(echo  $B1 \* $thevalue | bc -l)                         



#cosAC=$(echo "scale=10; -$ang / $sqrt_sum" | bc -l)     

########################################################################
##                        Substituion                                 ## 
########################################################################

H=$A
sed  -i "/^    A = /s/.*/    A = $H/" pw_compress$next_value%c.in


Z=$B
sed  -i "/^    B = /s/.*/    B = $Z/" pw_compress$next_value%c.in


#Y=$cosAC
#sed  -i "/^    cosAC = /s/.*/    cosAC = $Y/" pw_comp$next_value%a.in

/shared/intel_june_30/compilers_and_libraries_2020.1.217/linux/mpi/intel64/bin/mpirun  -n $ncpu  $PWSCF < pw_compress$next_value%c.in > pw_compress$next_value%c.out


##########################################################################
##                             Results_Summary                          ##
##########################################################################
grep -A 3 "total" pw_compress$next_value%c.out | tail -1 > stress.txt
SA=`awk '{print $3}' < stress.txt` 
echo $SA >> ../Stress_A.txt
echo $f >> ../A_Strain.txt

#############################For Poisson's Ratio##################################################                   

grep -A 3 "SYSTEM" pw3-comp$f%c.in | tail -n -1| sed -n 's/.*    B =\([^)]*\).*/\1/p' > B_scratch.txt
SAA=`awk '{print $1}' < B_scratch.txt`
echo $SAA >> ../B_Lattice.txt

grep -A 2 "SYSTEM" pw3-comp$f%c.in | tail -n -1| sed -n 's/.*    A =\([^)]*\).*/\1/p' > A_scratch.txt
SAB=`awk '{print $1}' < A_scratch.txt`
echo $SAB >> ../A_Lattice.txt

grep -A 4 "SYSTEM" pw3-comp$f%c.in | tail -n -1| sed -n 's/.*    C =\([^)]*\).*/\1/p' > C_scratch.txt
SAC=`awk '{print $1}' < C_scratch.txt`
echo $SAC >> ../C_Lattice.txt

##########################################Delete Files############################################                   
rm  stress.txt
rm  A_scratch.txt
rm  B_scratch.txt
rm  C_scratch.txt
###################################################################################################                  

cd ..

done


